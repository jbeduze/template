
/*These are your custom fonts, sizing, and coloring you can select multiple fonts/colors/sizing to disply depending on the HTML element. Elements can include h1, h1, div, span, etc. lower, you'll see how we can get more specific to avoid overlapping styling (example: if we listed "div" by itself for one of these elements, it would override all other element customizing you do */

/* this font import includes the following fonts: Freeman, sans- serif;, Sedan SC, sals-serif;, Jaro, sans-serif; Briem Hand, sans-serif;*/


/*this one will impact the titles (h1 HTML Element) */
@import url('https://fonts.googleapis.com/css2?family=Briem+Hand:wght@100..900&family=Freeman&family=Jaro:opsz@6..72&family=Sedan+SC&display=swap')

h1 {
    font-family: 'Sedan SC', sans-serif; 
    font-size: 25px;
    font-weight: 500;
    color: #11ca5e;
}

/* This one will impact the subheaders (h2 HTML Element) */
h2 {
    font-family: 'Poetsen One', sans-serif; 
    font-size: 25px;
    font-weight: 500;
    color: #11ca5e;
}


/* This one will impact the subheaders (h3 HTML Element) */
h3 {
    font-family: 'Poetsen One', sans-serif; 
    font-size: 18px;
    font-weight: 500;
    color: #ca4511;
}

/*ok, so those elements are realtively easy because you dont have too much overlap, below you'll see how we avoid the div element *
/* Using the attribute selector for the data-testid attribute. This is better than referring to the Class, which can change on item change/update */
div[data-testid="stText"] {
    font-family: 'Freeman', sans-serif; 
    font-size: 20px;
    font-weight: 500;
    color: #a2ca11;
}

/*st.markdowncontainer hits both the st.markdown and the standard st.write functions, you can take it a sterp further, and include the class as well, but I'm pretty satified  */
div[data-testid="stMarkdownContainer"] {
    font-family: 'Jaro', sans-serif; 
    font-size: 20px;
    font-weight: 500;
    color: #0057f8;
}
